# Optimizes hibernate for this dialect, but isn't necessary
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5432/student_book
spring.jpa.properties.hibernate.default_schema=student_book
spring.datasource.username=postgres
spring.datasource.password=joanna

# Initializes database from schema - but we switch from schema.sql to flyway, so it seems obsolete
#spring.datasource.initialization-mode=always

# Default value for PostgreSql is true
# https://docs.jboss.org/hibernate/orm/5.2/userguide/html_single/appendices/Configurations.html
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# seems unnecessary
#spring.flyway.url=${spring.datasource.url}
#spring.flyway.user=${spring.datasource.username}
#spring.flyway.password=${spring.datasource.password}

# application fails to start without this annotation, but tests are working fine
spring.flyway.schemas=${spring.jpa.properties.hibernate.default_schema}

# seems unnecessary for application and tests to run, but in real application we would probably like to limit file size
#spring.servlet.multipart.enabled=true
#spring.servlet.multipart.file-size-threshold=2KB
#spring.servlet.multipart.max-file-size=20MB
#spring.servlet.multipart.max-request-size=20MB

# needed for gmail to send emails
spring.mail.host = smtp.gmail.com
spring.mail.username = twoj.dzienniczek.ucznia@gmail.com
spring.mail.password =

# those probably aren't needed
#spring.mail.properties.mail.smtp.auth = true
#spring.mail.properties.mail.smtp.socketFactory.fallback = false

# those are required for gmail authentication
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory

# only for logging
spring.jpa.show-sql=true
